__kernel 
void convolution(
    __read_only image2d_t inputImage,
    __write_only image2d_t outputImage,
    __constant float* filter,
    int filterWidth)
{
int column = get_global_id(0);
int row = get_global_id(1);
__constant sampler_t sampler = CLK_NORMALIZED_COORDS_FALSE | CLK_ADDRESS_CLAMP_TO_EDGE | CLK_FILTER_NEAREST;


int halfWidth = (int)(filterWidth/2);

float4 sum = (0.0f, 0.0f, 0.0f, 0.0f);
int filterIdx = 0;
int2 coords;
   for (int i=-halfWidth; i<=halfWidth; i++)
           {
           
                   coords.y = row + i;
                   for (int j = -halfWidth; j<=halfWidth; j++)
                               {
                                   coords.x = column + j;
                                   float4 pixel;
                                   pixel = read_imagef(inputImage, sampler, coords);
                                   sum +=pixel*filter[filterIdx++];
                               
                               }
                           coords.x = column;
                           coords.y = row;
                           write_imagef(outputImage, coords, sum);     

           }
           

}
